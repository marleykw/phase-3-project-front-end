{"ast":null,"code":"import _defineProperty from \"/Users/marleywatson/Development/phase-2-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/marleywatson/Development/phase-2-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/marleywatson/Development/phase-2-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marleywatson/Development/phase-2-project/src/components/CommentForm.js\";\nimport React, { useState } from \"react\";\nfunction CommentForm(_ref) {\n  var article_id = _ref.article_id,\n    handleUpdateItem = _ref.handleUpdateItem;\n  var id = article_id;\n  var initialFormData = {\n    comment: \"\",\n    created_at: \"\",\n    updated_at: \"\",\n    outfit_id: \"\"\n  };\n  var _useState = useState(initialFormData),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var handleChange = function handleChange(e) {\n    setFormData(_objectSpread({}, formData, _defineProperty({}, e.target.name, e.target.value)));\n  };\n  var handleSubmit = function handleSubmit(e) {\n    var newComment = _objectSpread({}, formData);\n    fetch(\"http://localhost:9292/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        article_id: e.target.id,\n        comment: newComment.comment\n      })\n    });\n    handleUpdateItem(e.target.id);\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: id,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"comment\",\n    placeholder: \"Add Comments\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Post Comment\"));\n}\nexport default CommentForm;","map":{"version":3,"names":["React","useState","CommentForm","article_id","handleUpdateItem","id","initialFormData","comment","created_at","updated_at","outfit_id","formData","setFormData","handleChange","e","target","name","value","handleSubmit","newComment","fetch","method","headers","body","JSON","stringify"],"sources":["/Users/marleywatson/Development/phase-2-project/src/components/CommentForm.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nfunction CommentForm({article_id, handleUpdateItem}) {\n    const id = article_id\n    const initialFormData = {\n        comment: \"\",\n        created_at: \"\",\n        updated_at: \"\",\n        outfit_id: \"\"\n      }\n      const [formData, setFormData] = useState(initialFormData)\n\n    const handleChange = (e) => {\n        setFormData({\n          ...formData,\n          [e.target.name]:e.target.value\n        })\n    }\n        const handleSubmit = (e) => {\n\n        const newComment = {\n            ...formData\n        }\n            fetch(`http://localhost:9292/comments`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  article_id: e.target.id,\n                  comment: newComment.comment\n                })\n              });   \n              handleUpdateItem(e.target.id)\n    }\n\n    return(\n        <form id={id} onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"comment\" placeholder=\"Add Comments\" onChange={handleChange}/>\n            <button type=\"submit\" id={id}>Post Comment</button>\n        </form>\n    )\n}\n\nexport default CommentForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,SAASC,WAAW,OAAiC;EAAA,IAA/BC,UAAU,QAAVA,UAAU;IAAEC,gBAAgB,QAAhBA,gBAAgB;EAC9C,IAAMC,EAAE,GAAGF,UAAU;EACrB,IAAMG,eAAe,GAAG;IACpBC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE;EACb,CAAC;EAAA,gBAC+BT,QAAQ,CAACK,eAAe,CAAC;IAAA;IAAlDK,QAAQ;IAAEC,WAAW;EAE9B,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,CAAC,EAAK;IACxBF,WAAW,mBACND,QAAQ,sBACVG,CAAC,CAACC,MAAM,CAACC,IAAI,EAAEF,CAAC,CAACC,MAAM,CAACE,KAAK,GAC9B;EACN,CAAC;EACG,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIJ,CAAC,EAAK;IAE5B,IAAMK,UAAU,qBACTR,QAAQ,CACd;IACGS,KAAK,mCAAmC;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBtB,UAAU,EAAEW,CAAC,CAACC,MAAM,CAACV,EAAE;QACvBE,OAAO,EAAEY,UAAU,CAACZ;MACtB,CAAC;IACH,CAAC,CAAC;IACFH,gBAAgB,CAACU,CAAC,CAACC,MAAM,CAACV,EAAE,CAAC;EACvC,CAAC;EAED,oBACI;IAAM,EAAE,EAAEA,EAAG;IAAC,QAAQ,EAAEa,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjC;IAAO,IAAI,EAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,WAAW,EAAC,cAAc;IAAC,QAAQ,EAAEL,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eACtF;IAAQ,IAAI,EAAC,QAAQ;IAAC,EAAE,EAAER,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAsB,CAChD;AAEf;AAEA,eAAeH,WAAW"},"metadata":{},"sourceType":"module"}